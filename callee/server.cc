#include <iostream>
#include <string>
#include "../user.pb.h"
#include "../src/include/rpcapplication.h"

class UserService : public user::UserServiceRpc {  //use in callee side, provide service, inherit from base rpc class generated by protobuf
    public:
        //local login method to handle actual business logic
        bool Login(std::string name, std::string pwd) {
            std::cout << "doing local service: Login" << std::endl;
            std::cout<< "name: "<< name << "pwd: " << pwd << std::endl;
            return true;
        }
        void Login(::google::protobuf::RpcController* controller,
            const ::user::LoginRequest* request,
            ::user::LoginResponse* response,
            ::google::protobuf::Closure* done) {
                std::string name  = request->name();
                std::string pwd = request->pwd();
                bool login_result = Login(name, pwd);

                user::ResultCode* code = response->mutable_result();
                code->set_errcode(0);
                code->set_errmsg("");
                response->set_success(login_result);
                done->Run();
        }
};

int main(int argc, char** argv) {
    RpcApplication::Init(argc, argv);
    rpcProvider provider;
    provider.NotifyService(new UserService());
    provider.Run();
    return 0;
}